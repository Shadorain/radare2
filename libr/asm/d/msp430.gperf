%{
// gperf -aclEDCIG --null-strings -H sdb_hash_c_msp430 -N sdb_get_c_msp430 -t msp430.gperf > msp430.c
// gcc -DMAIN=1 msp430.c ; ./a.out > msp430.h
#include <stdio.h>
#include <ctype.h>
%}

struct kv { const char *name; const char *value; };
%%
clrn,"clear negative bit"
adc.b,"add carry to destination"
jeq,"jump if equal/zero"
pop.b,"pop byte from stack"
setc,"set carry flag"
incd.b,"increment destination twice"
jge,"jump if greater or equal"
setn,"set negative flag"
addc,"add source and carry to destinatio"
clr.b,"clear destination"
xor,"exclusive or"
push,"push value onto stac"
decd.b,"decrement destination twice"
inv,"invert bits in destination"
jnz,"jump if not equal/zero"
rla.b,"rotate left"
jmp,"jump"
dadc.b,"decimal add carry to destination"
eint,"enable interrupts"
ret,"return from subroutine"
dec,"decrement destination"
tst.b,"test destination"
call,"subroutine call"
inc.b,"increment destination"
br,"branch to"
rlc.b,"rotate left through carry"
sbc.b,"subtract source and borrow"
dec.b,"decrement destination"
setz,"set zero flag"
incd,"increment destination twice"
sub,"subtract source from destination"
cmp,"compare"
swpb,"swap bytes"
subc,"subtract source from destination (with carry)"
decd,"decrement destination twice"
sbc,"subtract source and borrow"
bic,"bit clear"
mov,"move source to destination"
reti,"return from interrup"
jn,"jump if negative"
rra,"rotate right arithmetiс"
clrz,"clear zero bit"
rlc,"rotate left through carry"
jl,"jump if less"
rrc,"rotate right through carry"
rla,"rotate left"
dint,"disable interrupts"
sxt,"sign extend byte to word"
and,"logical and"
tst,"test destination"
dadd,"decimal add source to destination (with carry)"
inv.b,"invert bits in destination"
bit,"test bits of source and destination"
jc,"jump if carry/higher or same"
bis,"bit set"
dadc,"decimal add carry to destination"
jnc,"jump if no carry/lower"
nop,"no operation"
adc,"add constant"
pop,"pop word from stack"
add,"add source to destination"
clr,"clear destination"
inc,"increment destination"
%%
// SDB-CGEN V1.7.0
// 0x5555d9de6170
const char* gperf_msp430_get(const char *s) {
	const struct kv *o = sdb_get_c_msp430 (s, strlen(s));
	return o? o->value: NULL;
}
const unsigned int gperf_msp430_hash(const char *s) {
	return sdb_hash_c_msp430(s, strlen (s));
}
struct {const char*name;void*get;void*hash;} gperf_msp430 = {
	.name = "msp430",
	.get = &gperf_msp430_get,
	.hash = &gperf_msp430_hash
};

#if MAIN
int main () {
	char line[1024];
	FILE *fd = fopen ("msp430.gperf", "r");
	if (!fd) {
		fprintf (stderr, "Cannot open msp430.gperf\n");
		return 1;
	}
	int mode = 0;
	printf ("#ifndef INCLUDE_msp430_H\n");
	printf ("#define INCLUDE_msp430_H 1\n");
	while (!feof (fd)) {
		*line = 0;
		fgets (line, sizeof (line), fd);
		if (mode == 1) {
			char *comma = strchr (line, ',');
			if (comma) {
				*comma = 0;
				char *up = strdup (line);
				char *p = up; while (*p) { *p = toupper (*p); p++; }
				printf ("#define GPERF_msp430_%s %d\n",
					line, sdb_hash_c_msp430 (line, comma - line));
			}
		}
		if (*line == '%' && line[1] == '%')
			mode++;
	}
	printf ("#endif\n");
}
#endif

